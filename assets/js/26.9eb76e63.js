(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{556:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("Boxx",{attrs:{changeTime:"30000"}}),t._v(" "),a("h2",{attrs:{id:"相关了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关了解"}},[t._v("#")]),t._v(" 相关了解")]),t._v(" "),a("h3",{attrs:{id:"dom-操作影响性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-操作影响性能"}},[t._v("#")]),t._v(" DOM 操作影响性能")]),t._v(" "),a("p",[t._v("在浏览器中，"),a("code",[t._v("DOM")]),t._v("和"),a("code",[t._v("ECMAScript")]),t._v("的实现是分离的。")]),t._v(" "),a("p",[t._v("例如：在"),a("code",[t._v("IE")]),t._v("中，"),a("code",[t._v("ECMAScript")]),t._v("的实现是在"),a("code",[t._v("script.dll")]),t._v("中，"),a("code",[t._v("DOM")]),t._v("实现在"),a("code",[t._v("mshtml.dll")]),t._v("中；在"),a("code",[t._v("Chrome")]),t._v("中使用"),a("code",[t._v("WebKit")]),t._v("中的"),a("code",[t._v("WebCore")]),t._v("中处理"),a("code",[t._v("DOM")]),t._v("和渲染，但"),a("code",[t._v("ECMAScript")]),t._v("是"),a("code",[t._v("V8")]),t._v("引擎中实现的，其他浏览器情况类似。")]),t._v(" "),a("p",[t._v("操作"),a("code",[t._v("DOM")]),t._v("，就是通过"),a("code",[t._v("js")]),t._v("代码调用"),a("code",[t._v("DOM")]),t._v("的接口，就相当于两个相互独立的模块发生了交互。这样，相比于在同一个模块当中互相调用，这种跨模块的调用它的性能损耗是非常高的。")]),t._v(" "),a("p",[t._v("然而，"),a("code",[t._v("DOM")]),t._v("操作影响性能最主要是因为它导致了浏览器的"),a("strong",[t._v("重绘（repaint）"),a("strong",[t._v("和")]),t._v("重排（reflow）")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"浏览器渲染原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[t._v("#")]),t._v(" 浏览器渲染原理")]),t._v(" "),a("p",[t._v("从下载文档到渲染页面的过程中，浏览器会通过解析"),a("code",[t._v("HTML")]),t._v("文档来构建DOM树，解析"),a("code",[t._v("CSS")]),t._v("产生"),a("code",[t._v("CSS")]),t._v("规则树。"),a("code",[t._v("JavaScript")]),t._v("代码在解析过程中， 可能会修改生成的DOM树和"),a("code",[t._v("CSS")]),t._v("规则树。之后根据DOM树和"),a("code",[t._v("CSS")]),t._v("规则树构建渲染树，在这个过程中"),a("code",[t._v("CSS")]),t._v("会根据选择器匹配"),a("code",[t._v("HTML")]),t._v("元素。渲染树包括了每 个元素的大小、边距等样式属性，渲染树中不包含隐藏元素及head元素等不可见元素。最后浏览器根据元素的坐标和大小来计算每个元素的位置，并绘制这些元 素到页面上。无论何时总会有一个初始化的页面布局伴随着一次绘制。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("重绘")]),t._v(" 指页面某些部分需要重新绘制，由于节点的几何属性发生改变或者由于样式发生改变，例如改变元素背景色时，屏幕上的部分内容需要更新，而元素的位置和尺寸并没有改变。")]),t._v(" "),a("li",[a("strong",[t._v("重排")]),t._v(" 元素的位置或尺寸发生了改变，浏览器需 要重新计算渲染树，导致渲染树的一部分或全部发生变化。渲染树重新建立后，浏览器会重新绘制页面上受影响的元素。"),a("strong",[t._v("重排")]),t._v("，改变的是"),a("code",[t._v("DOM")]),t._v("文档的结构，例如"),a("code",[t._v("DOM")]),t._v("元素的位置或者尺寸发生了变化，需要重新布局，就会发生重排。")])]),t._v(" "),a("h2",{attrs:{id:"优化方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化方法"}},[t._v("#")]),t._v(" 优化方法")]),t._v(" "),a("h3",{attrs:{id:"dom操作累积起来批量操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom操作累积起来批量操作"}},[t._v("#")]),t._v(" DOM操作累积起来批量操作")]),t._v(" "),a("p",[t._v("现代浏览器中会有优化方法，就是把dom操作积累起来，做批量处理。但是在有些情况下，浏览器会立即重排或重绘。比如请求如下的DOM元素布局信息："),a("code",[t._v("offsetTop/Left/Width/Height")]),t._v("、"),a("code",[t._v("scrollTop/Left/Width/Height")]),t._v("、"),a("code",[t._v("clientTop/Left/Width/Height")]),t._v("、"),a("code",[t._v("getComputedStyle()")]),t._v("或 "),a("code",[t._v("currentStyle")]),t._v("。因为这些值都是动态计算的，所以浏览器需要尽快完成页面的绘制，然后计算返回值，从而打乱了重排或重绘的优化。")]),t._v(" "),a("h3",{attrs:{id:"合并多次dom操作为单次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并多次dom操作为单次"}},[t._v("#")]),t._v(" 合并多次DOM操作为单次")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#00f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderStyle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'solid'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种编码方式因为频繁更改DOM元素样式，触发页面多次重排或重绘，现代浏览器针对这种情况有性能优化，它会合并DOM操作，但并不是所有的浏览器都有这种优化。推荐下面的方式把DOM操作合并.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// plan1")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border: 1px solid #00f;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// plan2")]),t._v("\nelement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border-bule'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("示例的代码有两种优化的方案，都做到了把多次的样式设置合并为一次设置。方案2比方案1稍微有一些性能上的损耗，它需要查询"),a("code",[t._v("CSS")]),t._v("类。方案2的维护性好。当性能问题并不突出，选择编码方案时需要优先考虑的是代码的维护性。")]),t._v(" "),a("p",[t._v("类似的操作还有通过"),a("code",[t._v("innerHTML")]),t._v("接口修改"),a("code",[t._v("DOM")]),t._v("元素的内容。不要直接通过此接口来拼接"),a("code",[t._v("HTML")]),t._v("代码，而是以字符串方式拼接好代码后，一次性赋值给DOM元素的"),a("code",[t._v("innerHTML")]),t._v("接口。")]),t._v(" "),a("h3",{attrs:{id:"使用文档片段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用文档片段"}},[t._v("#")]),t._v(" 使用文档片段")]),t._v(" "),a("p",[t._v("文档片段是一个轻量级的"),a("code",[t._v("document")]),t._v("对象，并不会和特定的页面关联。通过在文档片段上进行"),a("code",[t._v("DOM")]),t._v("操作，可以降低"),a("code",[t._v("DOM")]),t._v("操作对页面性能的影响，这种方式是创建一个文档片段，并在此片段上进行必要的"),a("code",[t._v("DOM")]),t._v("操作，操作完成后将它附加在页面中。对页面性能的影响只存在于最后把文档片段附加到页面的这一步 操作上。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fragment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些基于fragment的大量DOM操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'el'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"通过display-none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过display-none"}},[t._v("#")]),t._v(" 通过display: none")]),t._v(" "),a("p",[t._v("在隐藏和显示直接做的"),a("code",[t._v("DOM")]),t._v("操作，只有隐藏和显示才会引起页面的重绘或重排。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'el'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// el 大量DOM操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'block'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"克隆dom元素到内存中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆dom元素到内存中"}},[t._v("#")]),t._v(" 克隆DOM元素到内存中")]),t._v(" "),a("p",[t._v("这种方式是把页面上的"),a("code",[t._v("DOM")]),t._v("元素克隆一份到内存中，然后再在内存中操作克隆的元素，操作完成后使用此克隆元素替换页面中原来的"),a("code",[t._v("DOM")]),t._v("元素。这样一来，影响性能的操作就只是最后替换元素的这一步操作了，在内存中操作克隆元素不会引起页面上的性能损耗。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'el'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些基于nEl的大量DOM操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\noEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"脱离页面布局流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脱离页面布局流"}},[t._v("#")]),t._v(" 脱离页面布局流")]),t._v(" "),a("p",[t._v("例如：使动画效果的"),a("code",[t._v("DOM")]),t._v("元素"),a("code",[t._v("position")]),t._v("属性为"),a("code",[t._v("fixed")]),t._v("或"),a("code",[t._v("absolute")])]),t._v(" "),a("p",[t._v("把页面中具有动画效果的元素设置为绝对定位，使得元素脱离页面布局流，从而避免了页面频繁的重排，只涉及动画元素自身的重排了。这种做法可以提高动画效果的展示性能。如果把动画元素设置为绝对定位并不符合设计的要求，则可以在动画开始时将其设置为绝对定位，等动画结束后恢复原始的定位设置。在很多的网站中，页面的顶部会有大幅的广告展示，一般会动画展开和折叠显示。如果不做性能的优化，这个效果的性能损耗是很明显的。使用这里提到的优化方案，则可以提高性能。")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);